services:
  db:
    image: postgres:14-alpine
    container_name: chronosatlas_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: chronosatlas
      POSTGRES_USER: chronos_user
      POSTGRES_PASSWORD: chronos_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  api:
    build: .
    container_name: chronosatlas_api
    # This command uses the entrypoint.sh script which handles migrations/static files.
    # The final exec in the entrypoint starts the runserver command:
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8080:8000"
    depends_on:
      - db
    environment:
      DJANGO_SETTINGS_MODULE: ChronosAtlas.settings_default
      DB_NAME: chronosatlas
      DB_USER: chronos_user
      DB_PASSWORD: chronos_pass
      DB_HOST: db
      DB_PORT: 5432
      # SECRET_KEY and DEBUG are handled via .env and python-decouple
      
  # ----------------------------------------------------
  # Phase 2 (Performance & Scaling) â€“ placeholders
  # ----------------------------------------------------
  # redis:
  #   image: redis:7-alpine
  #   container_name: chronosatlas_redis
  #   restart: unless-stopped
  #
  # worker:
  #   build: .
  #   container_name: chronosatlas_worker
  #   command: celery -A ChronosAtlas worker -l info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db
  #     - redis

volumes:
  postgres_data: